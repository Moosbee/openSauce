<?php namespace ProcessWire;

/**
 * @author  flipzoom; Media - David Karich
 * @contact David Karich <david.karich@flipzoom.de>
 * @website www.flipzoom.de
 * @create  2021-02-09
 * @style   Tab size: 4 / Soft tabs: YES
 * ----------------------------------------------------------------------------------
 * @licence
 * Copyright (c) 2021 flipzoom; Media - David Karich
 * Permission is hereby granted, free of charge, to any person obtaining a copy 
 * of this software and associated documentation files (the "Software"), to deal 
 * in the Software without restriction, including without limitation the rights 
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
 * copies of the Software, and to permit persons to whom the Software is furnished 
 * to do so, subject to the following conditions: The above copyright notice and 
 * this permission notice shall be included in all copies or substantial portions 
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ----------------------------------------------------------------------------------
 */

class FieldtypePageHitCounter extends Fieldtype {
    
    /**
     * ------------------------------------------------------------------------
     * Default module info
     * ------------------------------------------------------------------------
     * @return array
     */
    public static function getModuleInfo() {
        return array(
            'title'         => __('Page Hit Counter Selector Field'),
            'summary'       => __('This field is needed to provide page views as selector for sorting.'), 
            'author'        => 'David Karich - flipzoom; Media',
            'href'          => 'https://github.com/FlipZoomMedia/PageHitCounter',
            'version'       => 123, 
            'requires'      => array('ProcessWire>=3.0.80', 'PHP>=5.6', 'PageHitCounter')
        );
    }

    /**
     * ------------------------------------------------------------------------
     * Return default blank config options
     * ------------------------------------------------------------------------
     * @param  Page   $page  [description]
     * @param  Field  $field [description]
     */
    public function getInputfield(Page $page, Field $field) {
        return $this->wire->modules('InputfieldMarkup');
    }

    /**
     * ------------------------------------------------------------------------
     * Return page hit value
     * ------------------------------------------------------------------------
     * @param  Page   $page  
     * @param  Field  $field 
     * @param  Integer $value 
     * @return Integer        
     */
    public function sanitizeValue(Page $page, Field $field, $value) {
        return ($value) ?: (int) 0;
    }

    /**
     * ------------------------------------------------------------------------
     * Set field data from DB entries on wakeup
     * ------------------------------------------------------------------------
     * @param  Page   $page
     * @param  Field  $field
     * @param  Mixed  $value
     * @return Integer
     */
    public function ___wakeupValue(Page $page, Field $field, $value) {

        // ------------------------------------------------------------------------
        // Set dynamic property of last hit timestamp
        // ------------------------------------------------------------------------
        $page->set('lastPageHit', $value['last_hit']);

        // ------------------------------------------------------------------------
        // Return counter value as basic data property
        // ------------------------------------------------------------------------
        return (int) $value['data'];
    }

    /**
     * ------------------------------------------------------------------------
     * Return database schema on install
     * ------------------------------------------------------------------------
     * @param  Field  $field 
     * @return String        
     */
    public function getDatabaseSchema(Field $field) {
        $charset                    = $this->wire('config')->dbCharset;
        $schema                     = parent::getDatabaseSchema($field);
        $schema['data']             = "int UNSIGNED DEFAULT 0";
        $schema['last_hit']         = "datetime NULL DEFAULT NULL";
        $schema['xtra']['append']   = "ENGINE=InnoDB DEFAULT CHARSET=$charset";
        return $schema;
    }
}

?>
